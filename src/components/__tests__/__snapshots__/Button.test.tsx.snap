// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders button with an accessibility hint 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityHint="hint"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 12,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Button with accessibility hint
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders button with an accessibility label 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityLabel="label"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 12,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Button with accessibility label
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders button with button color 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "#e91e63",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "#e91e63",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 12,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Custom Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders button with color 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 12,
                },
                undefined,
                false,
                Object {
                  "color": "#e91e63",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Custom Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders button with custom testID 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="custom:testID-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="custom:testID-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="custom:testID"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 12,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="custom:testID-text"
        >
          Button with custom testID
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders button with icon 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "marginLeft": 12,
                "marginRight": -4,
              },
              Object {
                "marginLeft": 16,
                "marginRight": -16,
              },
              Object {
                "marginLeft": 12,
                "marginRight": -8,
              },
            ]
          }
          testID="button-icon-container"
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            selectable={false}
            style={
              Array [
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontSize": 18,
                },
                Array [
                  Object {
                    "lineHeight": 18,
                    "transform": Array [
                      Object {
                        "scaleX": 1,
                      },
                    ],
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            󰄀
          </Text>
        </View>
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 16,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Icon Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders button with icon in reverse order 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            Object {
              "flexDirection": "row-reverse",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "marginLeft": -4,
                "marginRight": 12,
              },
              Object {
                "marginLeft": -16,
                "marginRight": 16,
              },
              Object {
                "marginLeft": -8,
                "marginRight": 12,
              },
            ]
          }
          testID="button-icon-container"
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            selectable={false}
            style={
              Array [
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontSize": 18,
                },
                Array [
                  Object {
                    "lineHeight": 18,
                    "transform": Array [
                      Object {
                        "scaleX": 1,
                      },
                    ],
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            󰅂
          </Text>
        </View>
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 16,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Right Icon
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders contained contained with mode 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "rgba(103, 80, 164, 1)",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "rgba(103, 80, 164, 1)",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 24,
                  "marginVertical": 10,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(255, 255, 255, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Contained Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders disabled button 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 12,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(28, 27, 31, 0.38)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Disabled Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders loading button 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityRole="progressbar"
          accessibilityState={
            Object {
              "busy": true,
            }
          }
          accessible={true}
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
              },
              Array [
                Object {
                  "marginLeft": 12,
                  "marginRight": -4,
                },
                Object {
                  "marginLeft": 16,
                  "marginRight": -16,
                },
                Object {
                  "marginLeft": 12,
                  "marginRight": -8,
                },
              ],
            ]
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "height": 18,
                "opacity": 1,
                "width": 18,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "height": 18,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 18,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 9,
                      "overflow": "hidden",
                      "width": 18,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 18,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-165deg",
                          },
                        ],
                        "width": 18,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 9,
                          "overflow": "hidden",
                          "width": 18,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "borderColor": "rgba(103, 80, 164, 1)",
                            "borderRadius": 9,
                            "borderWidth": 1.8,
                            "height": 18,
                            "width": 18,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "height": 18,
                    "transform": Array [
                      Object {
                        "rotate": "45deg",
                      },
                    ],
                    "width": 18,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 9,
                      "overflow": "hidden",
                      "top": 9,
                      "width": 18,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 18,
                        "transform": Array [
                          Object {
                            "translateY": -9,
                          },
                          Object {
                            "rotate": "345deg",
                          },
                        ],
                        "width": 18,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 9,
                          "overflow": "hidden",
                          "width": 18,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "borderColor": "rgba(103, 80, 164, 1)",
                            "borderRadius": 9,
                            "borderWidth": 1.8,
                            "height": 18,
                            "width": 18,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 16,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Loading Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders outlined button with mode 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "rgba(121, 116, 126, 1)",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 1,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 24,
                  "marginVertical": 10,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Outlined Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders text button by default 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 12,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Text Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders text button with mode 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "alignSelf": undefined,
      "backgroundColor": "transparent",
      "borderRadius": 20,
      "bottom": undefined,
      "end": undefined,
      "flex": undefined,
      "height": undefined,
      "left": undefined,
      "opacity": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
      "start": undefined,
      "top": undefined,
      "transform": undefined,
      "width": undefined,
    }
  }
  testID="button-container-outer-layer"
>
  <View
    collapsable={false}
    style={
      Object {
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 20,
        "borderStyle": "solid",
        "borderWidth": 0,
        "flex": undefined,
        "minWidth": 64,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
    testID="button-container"
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          false,
          Object {
            "borderRadius": 20,
          },
        ]
      }
      testID="button"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          numberOfLines={1}
          selectable={false}
          style={
            Array [
              Object {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 9,
                  "textAlign": "center",
                },
                false,
                Object {
                  "marginHorizontal": 12,
                },
                undefined,
                false,
                Object {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                undefined,
              ],
            ]
          }
          testID="button-text"
        >
          Text Button
        </Text>
      </View>
    </View>
  </View>
</View>
`;
